{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npx prisma init:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(npm run migrate:json:*)",
      "Bash(npm run dev:*)",
      "Bash(mkdir:*)",
      "Bash(npx create-next-app@latest:*)",
      "Bash(mv:*)",
      "Bash(taskkill:*)",
      "Bash(dir:*)",
      "Bash(move:*)",
      "Bash(robocopy:*)",
      "Bash(xcopy:*)",
      "Bash(powershell:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(npm run build:*)",
      "Bash(curl:*)",
      "WebFetch(domain:localhost)",
      "Bash(rm:*)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(npx prisma:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db push)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db push --accept-data-loss)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node scripts/fix-single-event-slug.js)",
      "Bash(sed:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma studio --port 5555 --browser none)",
      "Bash(pkill:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db execute --stdin)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node scripts/remove-tba-artist.js)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db push --force-reset)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma generate)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node check-schema.js)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node test-update.js)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_type",
      "Bash(cp:*)",
      "Bash(git push:*)",
      "mcp__archon__health_check",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node scripts/add-missing-slugs.js)",
      "mcp__archon__manage_project",
      "Bash(brew list:*)",
      "Bash(pip3:*)",
      "mcp__archon__session_info",
      "mcp__archon__manage_task",
      "mcp__archon__manage_document",
      "mcp__archon__search_code_examples",
      "mcp__archon__perform_rag_query",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_tab_close",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_handle_dialog",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_install",
      "Bash(brew install:*)",
      "Bash(open:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node scripts/add-venue-slugs.js)",
      "Bash(docker-compose up:*)",
      "Bash(docker ps:*)",
      "Bash(claude mcp:*)",
      "Bash(docker logs:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(docker exec:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker-compose:*)",
      "Bash(docker stop:*)",
      "Bash(docker start:*)",
      "Bash(lsof:*)",
      "Bash(touch:*)",
      "WebFetch(domain:developer.spotify.com)",
      "WebFetch(domain:www.last.fm)",
      "WebFetch(domain:ws.audioscrobbler.com)",
      "mcp__firecrawl__firecrawl_search",
      "WebFetch(domain:soundcharts.com)",
      "WebFetch(domain:publicapis.dev)",
      "WebFetch(domain:musicbrainz.org)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" node scripts/add-artist-slugs.js)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db execute --file ./check-gene-farris.sql)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db execute --file ./check-gene-farris.sql --schema ./prisma/schema.prisma)",
      "Bash(git commit:*)",
      "Bash(npx tsc:*)",
      "mcp__playwright__browser_tab_list",
      "Bash(npx playwright:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_PXLi0N4RnYqf@ep-late-dust-aea8s1uw-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require\" npx prisma db execute --file ./check-artists.sql --schema ./prisma/schema.prisma)",
      "mcp__playwright__browser_tab_select"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}